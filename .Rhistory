labs(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))
allo_full
allo_full <- mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1", "b_inbred1"),
prob=0.89) +
scale_y_discrete(labels(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("Full")
allo_full
mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1", "b_inbred1"),
prob=0.89) +
scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("Full")
allo_full <- mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1", "b_inbred1"),
prob=0.89) +
scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("Full")
allo_noinbred <- mcmc_areas(allogrooming_noinbred,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1"),
prob = 0.89) +
scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size"))) +
ggtitle("Inbreeding only")
allo_full | allo_noinbred
allo_noinbred <- mcmc_areas(allogrooming_noinbred,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1"),
prob = 0.89) +
scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size"))) +
ggtitle("Without inbreeding")
allo_full <- mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1", "b_inbred1"),
prob=0.89) +
scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("With inbreeding")
allo_full | allo_noinbred
allogrooming_noinbred
allogrooming_treat
allo_comparison <- bayesfactor_models(allogrooming_full, allogrooming_treat, allogrooming_treatonly, allogrooming_noint, allogrooming_size, allogrooming_inbred, denominator = allogrooming_null)
allo_comparison
allo_inclusion <- bayesfactor_inclusion(allo_comparison)
allo_inclusion
allo_comparison <- bayesfactor_models(allogrooming_full, allogrooming_treat, allogrooming_treatonly, allogrooming_noint, allogrooming_size, allogrooming_inbred, allogrooming_noinbred ,denominator = allogrooming_null)
allo_comparison
allo_inclusion <- bayesfactor_inclusion(allo_comparison)
allo_inclusion
bayes_factor(antennation_noinbred, antennation_full)
antennation_full
antennation_noinbred
bayes_factor(antennation_noinbred, antennation_full)
antennation_full <- brm(proportion ~
treatment + treatment:wood_type +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = antennation %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
antennation_full_posterior <- as.matrix(antennation_full)
bayes_factor(antennation_noinbred, antennation_full)
bayesfactor(startle_full, startle_noinbred)
antennation_treat
antennation <- read.csv("Data/antennation_all.csv")
antennation$proportion <- antennation$proportion/100 # make percentages proportions
antennation$day <- as.factor(antennation$day)
antennation$code <- as.factor(antennation$code)
antennation$treatment <- as.factor(antennation$treatment)
antennation$wood_type <- as.factor(antennation$wood)
antennation$inbred <- as.factor(antennation$inbred)
options(buildtools.check = function(action) TRUE) # Prevents opening of dialog box to ask about re-starting R between each model run.
priors <- prior(normal(0, 2.5), class="b")
# Run garbage collection (gc()) between running models to prevent brms crashing R.
gc()
antennation_full <- brm(proportion ~
treatment + treatment:wood_type +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = antennation %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
antennation_full_posterior <- as.matrix(antennation_full)
saveRDS(antennation_full, "antennation_full.Rds")
antennation_full <- readRDS("antennation_full.Rds")
antennation_full_posterior <- as.matrix(antennation_full)
gc()
antennation_noinbred <- brm(proportion ~
treatment + treatment:wood_type +
size.1 +
(1 | day) + (1 | code) + (1|order),
data = antennation,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
antennation_noinbred_posterior <- as.matrix(antennation_noinbred)
saveRDS(antennation_noinbred, "antennation_noinbred.Rds")
antennation_noinbred <- readRDS("antennation_noinbred.Rds")
antennation_noinbred_posterior <- as.matrix(antennation_noinbred)
antennation_noint <- brm(proportion ~
treatment +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = antennation,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
antennation_noint_posterior <- as.matrix(antennation_noint)
saveRDS(antennation_noint, "antennation_noint.Rds")
antennation_noint <- readRDS("antennation_noint.Rds")
antennation_noint_posterior <- as.matrix(antennation_noint)
gc()
antennation_treat <- brm(proportion ~
treatment + treatment:wood_type + inbred +
(1|day) + (1|code) + (1|order),
data = antennation,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
antennation_treat_posterior <- as.matrix(antennation_treat)
saveRDS(antennation_treat, "antennation_treat.Rds")
antennation_treat <- readRDS("antennation_treat.Rds")
antennation_treat_posterior <- as.matrix(antennation_treat)
gc()
antennation_treatonly <- brm(proportion ~
treatment + inbred +
(1|day) + (1|code) + (1|order),
data = antennation,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
antennation_treatonly_posterior <- as.matrix(antennation_treatonly)
saveRDS(antennation_treatonly, "antennation_treatonly.Rds")
antennation_treatonly <- readRDS("antennation_treatonly.Rds")
antennation_treatonly_posterior <- as.matrix(antennation_treatonly)
gc()
antennation_size <- brm(proportion ~
size.1 + inbred _
antennation_size <- brm(proportion ~
size.1 + inbred +
(1|day) + (1|code) + (1|order),
data = antennation,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
library(rstanarm)
startle <- read.csv("Data/startle_all.csv")
startle$day <- as.factor(startle$day)
startle$code <- as.factor(startle$code)
startle$treatment <- as.factor(startle$treatment)
startle$wood_type <- as.factor(startle$wood)
startle$inbred <- as.factor(startle$inbred)
#### Models ####
startle_full <- stan_glmer(count ~
treatment + treatment:wood_type +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = startle,
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_full.csv",
adapt_delta = 0.99,
cores=4)
startle_full_posterior <- as.matrix(startle_full)
# saveRDS(startle_full, "startle_full.Rds")
#
# startle_full <- readRDS("startle_full.Rds")
# startle_full_posterior <- as.matrix(startle_full)
startle_noinbred <- stan_glmer(count ~
treatment + treatment:wood_type +
size.1 +
(1 | day) + (1 | code) + (1|order),
data = startle  %>% filter(!is.na(inbred)),
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_noinbred.csv",
adapt_delta = 0.99,
cores=4)
startle_noinbred_posterior <- as.matrix(startle_noinbred)
# saveRDS(startle_noinbred, "startle_noinbred.Rds")
#
# startle_noinbred <- readRDS("startle_noinbred.Rds")
# startle_noinbred_posterior <- as.matrix(startle_noinbred)
#
startle_treat <- stan_glmer(count ~
treatment + treatment:wood_type +
(1 | code) + (1|day) + (1|order),
data = startle,
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_treat.csv",
adapt_delta = 0.99,
cores=4)
startle_treat_posterior <- as.matrix(startle_treat)
# saveRDS(startle_treat, "startle_treat.Rds")
#
# startle_treat <- readRDS("startle_treat.Rds")
# startle_treat_posterior <- as.matrix(startle_treat)
startle_noint <- stan_glmer(count ~
treatment + size.1 +
(1 | code) + (1|day) + (1|order),
data = startle,
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_noint.csv",
adapt_delta = 0.99,
cores=4)
startle_noint_posterior <- as.matrix(startle_noint)
# saveRDS(startle_noint, "startle_noint.Rds")
#
# startle_noint <- readRDS("startle_noint.Rds")
# startle_noint_posterior <- as.matrix(startle_noint)
startle_treatonly <- stan_glmer(count ~
treatment +
(1 | code) + (1|day) + (1|order),
data = startle,
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_treatonly.csv",
adapt_delta = 0.99,
cores=4)
startle_treatonly_posterior <- as.matrix(startle_treatonly)
# saveRDS(startle_treatonly, "startle_treatonly.Rds")
# startle_treatonly <- readRDS("startle_treatonly.Rds")
# startle_treatonly_posterior <- as.matrix(startle_treatonly)
startle_size <- stan_glmer(count ~
size.1 +
(1 | code) + (1|day) + (1|order),
data = startle,
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_size.csv",
adapt_delta = 0.99,
cores=4)
startle_size_posterior <- as.matrix(startle_size)
# saveRDS(startle_size, "startle_size.Rds")
# startle_size <- readRDS("startle_size.Rds")
# startle_size_posterior <- as.matrix(startle_size)
#### Intercept + random only ####
startle_null <- stan_glm(count ~ 1 ,
data = startle,
family = neg_binomial_2(),
prior = normal(0,2.5),
diagnostic_file="startle_null.csv",
adapt_delta = 0.99,
cores=4)
startle_null_posterior <- as.matrix(startle_null)
# saveRDS(startle_null, "startle_null.Rds")
# startle_null <- readRDS("startle_size.Rds")
# startle_null_posterior <- as.matrix(startle_null)
startle_comparison <- bayesfactor_models(startle_full, startle_treat, startle_treatonly, startle_noint, startle_size, denominator = startle_null)
comparison <- bayesfactor_models(antennation_full, antennation_treat, antennation_treatonly, antennation_noint, antennation_size, denominator = antennation_null)
bayes_factor(antennation_noinbred, antennation_full)
startle_inclusion
startle_inclusion <- bayesfactor_inclusion(startle_comparison)
startle_comparison <- bayesfactor_models(startle_full, startle_treat, startle_treatonly, startle_noint, startle_size, denominator = startle_null)
startle_full
bayesfactor(startle_full, startle_noinbred)
bayesfactor(startle_full, startle_noinbred)
allogrooming_full
allogrooming_noinbred
gc()
allogrooming_noinbred <- brm(proportion ~
treatment + treatment:wood_type +
size.1 +
(1 | day) + (1 | code) + (1|order),
data = allogrooming,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
bayes_factor(allogrooming_full, allogrooming_noinbred)
bayes_factor(allogrooming_full, allogrooming_noinbred)
allogrooming_full
allogrooming_full <- brm(proportion | mi() ~
treatment + treatment:wood_type +
size.1 + mi(inbred) +
(1 | day) + (1 | code) + (1|order),
data = allogrooming,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
gc()
allogrooming_full <- brm(proportion ~
treatment + treatment:wood_type +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = allogrooming %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
allogrooming_full_posterior <- as.matrix(allogrooming_full)
bayes_factor(allogrooming_full, allogrooming_noinbred)
gc()
allogrooming_noinbred <- brm(proportion ~
treatment + treatment:wood_type +
size.1 +
(1 | day) + (1 | code) + (1|order),
data = allogrooming %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
bayes_factor(allogrooming_full, allogrooming_noinbred)
allogrooming_full
allogrooming_noinbred
allogrooming_inbred
allo_comparison <- bayesfactor_models(allogrooming_full, allogrooming_treat, allogrooming_treatonly, allogrooming_noint, allogrooming_size, allogrooming_inbred, allogrooming_noinbred ,denominator = allogrooming_null)
allo_comparison
allo_inclusion <- bayesfactor_inclusion(allo_comparison)
allo_inclusion
allogrooming_full
#### Effect size ####
allo_treatment_effect <- plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_treatment1"]) - plogis(allogrooming_full_posterior[,"b_Intercept"])
allo_interaction_effect <- plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_treatment1:wood_typeD"]) - plogis(allogrooming_full_posterior[,"b_Intercept"])
allo_size_effect <- plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"]*0.947) - plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"]*1.041)
allo_treatment_effect
median(allo_interaction_effect)
median(allo_treatment_effect)
allo_size_effect <- plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"]*1.5) - plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"]*1.6)
median(allo_size_effect)*100
ggplot(df_effects, aes(x=Size_ratio, y=Effect)) +
geom_line() +
theme_classic()
df_effects = data.frame(seq(0.6, 1.6, 0.01), allo_size_effects)
colnames(df_effects) = c("Size_ratio", "Effect")
ggplot(df_effects, aes(x=Size_ratio, y=Effect)) +
geom_line() +
theme_classic()
df_effects
df_effects = data.frame(seq(0.6, 1.6, 0.01), allo_size_effects)
allo_size_effects = c()
for(i in seq(0.6, 1.6, 0.01)){
allo_size_effects = c(allo_size_effects, median(plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"] * i) -
plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"] * (i + 0.1)))*100) #
}
df_effects = data.frame(seq(0.6, 1.6, 0.01), allo_size_effects)
colnames(df_effects) = c("Size_ratio", "Effect")
ggplot(df_effects, aes(x=Size_ratio, y=Effect)) +
geom_line() +
theme_classic()
allo_box <- ggplot(allogrooming_plus, aes(x=treatment, y=proportion, fill=wood)) +
geom_boxplot(varwidth = TRUE) +
ggtitle("a)") +
theme_classic() +
labs(fill="Wood treatment",
x = "Newcomer identity",
y="Allogrooming towards newcomer \n (proportion time)") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text=element_text(size=12),
legend.position = "bottom") +
scale_fill_manual(values=c("white","#7bccc4", "#08589e"), name="Wood type", breaks=c("D", "S"), labels=c("Different", "Same")) +
scale_x_discrete(labels=c("Nestmate", "Non-nestmate"))
allo_box
ggplot(allogrooming, aes(x=size.1, y=proportion)) +
geom_point() +
ggtitle("a)") +
theme_classic() +
labs(x = "Size ratio",
y="Allogrooming towards newcomer \n (proportion time)") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
allo_point <- ggplot(allogrooming, aes(x=size.1, y=proportion, color=inbred)) +
geom_point() +
ggtitle("a)") +
theme_classic() +
labs(x = "Size ratio",
y="Allogrooming towards newcomer \n (proportion time)") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
allo_point
allogrooming_full_posterior <- as.matrix(allogrooming_full)
allo_size_effect <- plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"]*1.5) - plogis(allogrooming_full_posterior[,"b_Intercept"] + allogrooming_full_posterior[,"b_size.1"]*1.6)
median(allo_size_effect)*100
allogrooming_noinbred_posterior <- as.matrix(allogrooming_noinbred)
allo_size_effect_ni <- plogis(allogrooming_noinbred_posterior[,"b_Intercept"] + allogrooming_noinbred_posterior[,"b_size.1"]*1.5) - plogis(allogrooming_noinbred_posterior[,"b_Intercept"] + allogrooming_noinbred_posterior[,"b_size.1"]*1.6)
median(allo_size_effect_ni)*100
allogrooming_noinbred <- brm(proportion ~
treatment + treatment:wood_type +
size.1 +
(1 | day) + (1 | code) + (1|order),
data = allogrooming,
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
allogrooming_noinbred_posterior <- as.matrix(allogrooming_noinbred)
allo_size_effect_ni <- plogis(allogrooming_noinbred_posterior[,"b_Intercept"] + allogrooming_noinbred_posterior[,"b_size.1"]*1.5) - plogis(allogrooming_noinbred_posterior[,"b_Intercept"] + allogrooming_noinbred_posterior[,"b_size.1"]*1.6)
median(allo_size_effect_ni)*100
allogrooming_noinbred_posterior <- as.matrix(allogrooming_noinbred)
allo_size_effect_ni <- plogis(allogrooming_noinbred_posterior[,"b_Intercept"] + allogrooming_noinbred_posterior[,"b_size.1"]*1.5) - plogis(allogrooming_noinbred_posterior[,"b_Intercept"] + allogrooming_noinbred_posterior[,"b_size.1"]*1.6)
median(allo_size_effect_ni)*100
mean(allogrooming$size.1)
mean(allogrooming$size)
allogrooming$size
mean(allogrooming$size.1)
allogrooming$size.1
median(allogrooming$size.1)
allogrooming_noinbred
allogrooming_full
allogrooming_noinbred
allogrooming <- read.csv("Data/allogrooming_all.csv")
allogrooming$proportion <- allogrooming$proportion/100 # make percentages proportions
allogrooming_full <- brm(proportion ~
treatment + treatment:wood_type +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = allogrooming %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
allogrooming_full <- brm(proportion ~
treatment + treatment:wood +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = allogrooming %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
allogrooming_full_posterior <- as.matrix(allogrooming_full)
allogrooming_full
allo_inclusion
allo_full
mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1", "b_inbred1"),
prob=0.89) +
# scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("With inbreeding")
allogrooming <- read.csv("Data/allogrooming_all.csv")
allogrooming$proportion <- allogrooming$proportion/100 # make percentages proportions
allogrooming$day <- as.factor(allogrooming$day)
allogrooming$code <- as.factor(allogrooming$code)
allogrooming$treatment <- as.factor(allogrooming$treatment)
allogrooming$wood_type <- as.factor(allogrooming$wood)
allogrooming$inbred <- as.factor(allogrooming$inbred)
allogrooming_full <- brm(proportion ~
treatment + treatment:wood_type +
size.1 + inbred +
(1 | day) + (1 | code) + (1|order),
data = allogrooming %>% filter(!is.na(inbred)),
family = zero_inflated_beta(),
prior = priors,
save_all_pars = TRUE,
iter = 5000,
cores = 4,
control = list(adapt_delta = 0.99,
max_treedepth = 15))
allogrooming_full_posterior <- as.matrix(allogrooming_full)
mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_size.1", "b_inbred1"),
prob=0.89) +
# scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("With inbreeding")
mcmc_areas(allogrooming_full,
pars = c("b_treatment1", "b_treatment1:wood_typeD", "b_treatment1:wood_typeS", "b_size.1", "b_inbred1"),
prob=0.89) +
# scale_y_discrete(labels=(c("Newcomer identity", "Newcomer identity:wood type", "Relative size", "Inbreeding status"))) +
ggtitle("With inbreeding")
allogrooming_full
allo_full | allo_noinbred
